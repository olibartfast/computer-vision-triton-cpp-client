version: '3.8'

services:
  # Production service
  triton-client:
    build:
      context: .
      dockerfile: Dockerfile
    image: tritonic:latest
    volumes:
      - ./data:/app/data:ro
      - ./config:/app/config:ro
    network_mode: host
    command: ["--help"]
    restart: unless-stopped

  # Development service with testing
  triton-client-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: tritonic:dev
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - .:/app/source:ro  # Mount source for development (read-only)
    network_mode: host
    command: ["run-tests"]
    environment:
      - TERM=xterm-256color
    tty: true
    stdin_open: true

  # Interactive development environment
  triton-client-interactive:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: tritonic:dev
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - .:/app/source:ro
    network_mode: host
    command: ["bash"]
    environment:
      - TERM=xterm-256color
    tty: true
    stdin_open: true

  # Triton server for testing (optional)
  triton-server:
    image: nvcr.io/nvidia/tritonserver:25.06-py3
    ports:
      - "8000:8000"
      - "8001:8001" 
      - "8002:8002"
    volumes:
      - ./model_repository:/models:ro
    command: ["tritonserver", "--model-repository=/models", "--log-verbose=1"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v2/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
